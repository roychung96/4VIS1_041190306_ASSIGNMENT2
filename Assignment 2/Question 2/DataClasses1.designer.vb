'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="diddyKong1")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertViewer(instance As Viewer)
    End Sub
  Partial Private Sub UpdateViewer(instance As Viewer)
    End Sub
  Partial Private Sub DeleteViewer(instance As Viewer)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("diddyKong1ConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Viewers() As System.Data.Linq.Table(Of Viewer)
		Get
			Return Me.GetTable(Of Viewer)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Viewer")>  _
Partial Public Class Viewer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _title_Name As String
	
	Private _release_Year As System.Nullable(Of Integer)
	
	Private _release_Month As String
	
	Private _game_Platform As String
	
	Private _designers As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub Ontitle_NameChanging(value As String)
    End Sub
    Partial Private Sub Ontitle_NameChanged()
    End Sub
    Partial Private Sub Onrelease_YearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrelease_YearChanged()
    End Sub
    Partial Private Sub Onrelease_MonthChanging(value As String)
    End Sub
    Partial Private Sub Onrelease_MonthChanged()
    End Sub
    Partial Private Sub Ongame_PlatformChanging(value As String)
    End Sub
    Partial Private Sub Ongame_PlatformChanged()
    End Sub
    Partial Private Sub OndesignersChanging(value As String)
    End Sub
    Partial Private Sub OndesignersChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_title_Name", DbType:="NVarChar(50)")>  _
	Public Property title_Name() As String
		Get
			Return Me._title_Name
		End Get
		Set
			If (String.Equals(Me._title_Name, value) = false) Then
				Me.Ontitle_NameChanging(value)
				Me.SendPropertyChanging
				Me._title_Name = value
				Me.SendPropertyChanged("title_Name")
				Me.Ontitle_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_release_Year", DbType:="Int")>  _
	Public Property release_Year() As System.Nullable(Of Integer)
		Get
			Return Me._release_Year
		End Get
		Set
			If (Me._release_Year.Equals(value) = false) Then
				Me.Onrelease_YearChanging(value)
				Me.SendPropertyChanging
				Me._release_Year = value
				Me.SendPropertyChanged("release_Year")
				Me.Onrelease_YearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_release_Month", DbType:="NChar(10)")>  _
	Public Property release_Month() As String
		Get
			Return Me._release_Month
		End Get
		Set
			If (String.Equals(Me._release_Month, value) = false) Then
				Me.Onrelease_MonthChanging(value)
				Me.SendPropertyChanging
				Me._release_Month = value
				Me.SendPropertyChanged("release_Month")
				Me.Onrelease_MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_game_Platform", DbType:="NVarChar(MAX)")>  _
	Public Property game_Platform() As String
		Get
			Return Me._game_Platform
		End Get
		Set
			If (String.Equals(Me._game_Platform, value) = false) Then
				Me.Ongame_PlatformChanging(value)
				Me.SendPropertyChanging
				Me._game_Platform = value
				Me.SendPropertyChanged("game_Platform")
				Me.Ongame_PlatformChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_designers", DbType:="NVarChar(MAX)")>  _
	Public Property designers() As String
		Get
			Return Me._designers
		End Get
		Set
			If (String.Equals(Me._designers, value) = false) Then
				Me.OndesignersChanging(value)
				Me.SendPropertyChanging
				Me._designers = value
				Me.SendPropertyChanged("designers")
				Me.OndesignersChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
